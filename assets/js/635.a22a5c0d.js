(window.webpackJsonp=window.webpackJsonp||[]).push([[635],{1074:function(a,n,s){"use strict";s.r(n);var t=s(44),e=Object(t.a)({},(function(){var a=this,n=a.$createElement,s=a._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"swaggerservice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#swaggerservice"}},[a._v("#")]),a._v(" SwaggerService "),s("Badge",{attrs:{text:"Service",type:"service"}})],1),a._v(" "),s("section",{staticClass:"symbol-info"},[s("table",{staticClass:"is-full-width"},[s("tbody",[s("tr",[s("th",[a._v("Module")]),s("td",[s("div",{staticClass:"lang-typescript"},[s("span",{staticClass:"token keyword"},[a._v("import")]),a._v(" { SwaggerService } "),s("span",{staticClass:"token keyword"},[a._v("from")]),a._v(" "),s("span",{staticClass:"token string"},[a._v('"@tsed/swagger/src/services/SwaggerService"')])])])]),s("tr",[s("th",[a._v("Source")]),s("td",[s("a",{attrs:{href:"https://github.com/TypedProject/tsed/blob/v5.58.0/packages/swagger/src/services/SwaggerService.ts#L0-L0"}},[a._v("/packages/swagger/src/services/SwaggerService.ts")])])])])])]),a._v(" "),s("h2",{attrs:{id:"overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[a._v("#")]),a._v(" Overview")]),a._v(" "),s("div",{staticClass:"language-typescript"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",{pre:!0,attrs:{class:"typescript-lang "}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" SwaggerService "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n"),s("div",{pre:!0,attrs:{class:"language- extra-class"}},[s("pre",[s("code",[a._v('<span class="token keyword">constructor</span><span class="token punctuation">(</span>injectorService<span class="token punctuation">:</span> <a href="/api/di/services/InjectorService.html"><span class="token">InjectorService</span></a><span class="token punctuation">,</span> platform<span class="token punctuation">:</span> <a href="/api/common/platform/services/Platform.html"><span class="token">Platform</span></a><span class="token punctuation">,</span> configuration<span class="token punctuation">:</span> <a href="/api/di/decorators/Configuration.html"><span class="token">Configuration</span></a><span class="token punctuation">)</span><span class="token punctuation">;</span>\n/**\n *\n * @returns <span class="token punctuation">{</span>Spec<span class="token punctuation">}</span>\n */\n<span class="token function">getOpenAPISpec</span><span class="token punctuation">(</span>conf<span class="token punctuation">:</span> <a href="/api/swagger/interfaces/ISwaggerSettings.html"><span class="token">ISwaggerSettings</span></a><span class="token punctuation">)</span><span class="token punctuation">:</span> Spec<span class="token punctuation">;</span>\n/**\n * Return the global api information.\n * @returns <span class="token punctuation">{</span>Info<span class="token punctuation">}</span>\n */\n<span class="token function">getDefaultSpec</span><span class="token punctuation">(</span>conf<span class="token punctuation">:</span> Partial&lt;<a href="/api/swagger/interfaces/ISwaggerSettings.html"><span class="token">ISwaggerSettings</span></a>&gt;<span class="token punctuation">)</span><span class="token punctuation">:</span> Spec<span class="token punctuation">;</span>\n\n/**\n *\n * @param paths\n * @param definitions\n * @param ctrl\n * @param endpointUrl\n * @param getOperationId\n */\n\n/**\n *\n * @param ctrl\n */\n\n/**\n *\n * @param <span class="token punctuation">{</span><a href="/api/swagger/interfaces/ISwaggerSettings.html"><span class="token">ISwaggerSettings</span></a><span class="token punctuation">}</span> conf\n * @returns <span class="token punctuation">{</span><span class="token punctuation">(</span>targetName<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">,</span> methodName<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span> =&gt; <span class="token punctuation">(</span><span class="token keyword">any</span> | <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n */\n')])])]),s("p",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")])])])])]),s("p")])}),[],!1,null,null,null);n.default=e.exports}}]);